#include <iostream>
#include <unordered_map>
#include <string>
using namespace std;
struct TrieNode {
    bool isEndOfWord;
    unordered_map<string, string> cityData;
    unordered_map<char, TrieNode*> children;
    TrieNode() : isEndOfWord(false) {}
};
class NameTrie {
private:
    TrieNode* root;
public:
    NameTrie() {
        root = new TrieNode();
    }
    void insert(const string& code, const string& name, const string& population) {
        TrieNode* node = root;
        for (char c : name) {
            c = tolower(c); // Case-insensitive
            if (node->children.count(c) == 0)
                node->children[c] = new TrieNode();
            node = node->children[c];
        }
        node->isEndOfWord = true;
        node->cityData[code + "," + name] = population;
    }
    TrieNode* search(const string& name) {
        TrieNode* node = root;
        for (char c : name) {
            c = tolower(c);
            if (node->children.count(c) == 0)
                return false;
            node = node->children[c];
        }
        return node;
    }

};
int main() {
    
}
